// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PostCategory {
  Video
  Text
  Quote
  Photo
  Link
}

model Post {
  id             Int          @id @default(autoincrement())
  originalPostId Int          @default(autoincrement())
  postCategory   PostCategory
  isDraft        Boolean
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now())
  publishedAt    DateTime     @default(now())
  userId         String
  originalUserId String
  likes          String[]
  likesCount     Int          @default(0)
  commentsCount  Int          @default(0)
  repostsCount   Int          @default(0)
  isRepost       Boolean      @default(false)
  tagsList       String[]
  comments       Comment[]
  link           Link?
  photo          Photo?
  quote          Quote?
  text           Text?
  video          Video?
}

model Comment {
  id          Int      @id @default(autoincrement())
  post        Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  commentText String
  userId      String
}

model Link {
  post            Post         @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId          Int          @id
  postCategory    PostCategory @default(Link) @ignore
  linkURL         String
  linkDescription String?

  @@unique([postId])
}

model Photo {
  post         Post         @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId       Int          @id
  postCategory PostCategory @default(Photo) @ignore
  photoLink    String

  @@unique([postId])
}

model Quote {
  post         Post         @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId       Int          @id
  postCategory PostCategory @default(Quote) @ignore
  quoteText    String
  quoteAuthor  String

  @@unique([postId])
}

model Text {
  post         Post         @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId       Int          @id
  postCategory PostCategory @default(Text) @ignore
  postTitle    String
  previewText  String
  postText     String

  @@unique([postId])
}

model Video {
  post         Post         @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId       Int          @id
  postCategory PostCategory @default(Video) @ignore
  postTitle    String
  videoLink    String

  @@unique([postId])
}
